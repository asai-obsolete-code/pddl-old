(in-package :pddl-test)
(in-suite :pddl)

(test (accessors :depends-on parse-success)
  (is (null (requirements domain)))
  (is (null (types domain)))
  (is (= 15 (predicates domain)))
  (is (null (constants domain)))
  (is (null (functions domain)))
  (is (= 5 (length (actions domain)))))

(test (actions :depends-on accessors)
  (let ((a (finishes (action domain :drive))))
    (is (typep a 'pddl-action))
    (is (= 3 (arity a)))
    (is (eql '(?x ?y ?z)
	     (parameters a)))
    (is (eql '(and (truck ?x) (place ?y) (place ?z)  (at ?x ?y))
	     (precondition a)))
    (is (eql '(and (at ?x ?z) (not (at ?x ?y)))
	     (effect a)))
    (is (eql '((at ?x ?y))
	     (delete-list a)))
    (is (eql '((at ?x ?z))
	     (add-list a)))
    (is-true (valid a))))


(run! :pddl)